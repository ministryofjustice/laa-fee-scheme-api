name: Build and deploy after PR merged

on:
  push:
    branches:
      - main
      - LFSP-32-dev-deploy
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and run tests
        uses: './.github/actions/build-and-test'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  ecr:
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and install dependencies
        run: ./gradlew clean build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to AWS ECR container repo
        uses: ministryofjustice/laa-reusable-github-actions/.github/actions/ecr-auth@main
        id: auth
        with:
          ecr_region: ${{ vars.ECR_REGION }}
          ecr_role: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          role-session-name: deployment

      - name: Build and Push
        uses: ministryofjustice/laa-reusable-github-actions/.github/actions/build-and-push@main
        with:
          dockerfile_path: .
          image_registry: ${{ steps.auth.outputs.image_registry }}
          image_repo: ${{ vars.ECR_REPOSITORY }}
          image_tag: ${{ github.sha }}

  deploy-dev:
    needs: ecr
    uses: ./.github/workflows/_deploy-to-env.yml
    with:
      environment: dev
    secrets: inherit

#  vulnerability-report:
#      runs-on: ubuntu-latest
#      needs: ecr
#      permissions:
#        security-events: write
#
#      env:
#        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        SNYK_ORG: legal-aid-agency
#        SNYK_TEST_EXCLUDE: build,generated
#        SNYK_TARGET_REFERENCE: main
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      steps:
#        - uses: actions/checkout@v4
#
#        - name: Run Snyk to check app for vulnerabilities
#          uses: snyk/actions/gradle@master
#          continue-on-error: true # To make sure that SARIF upload gets called
#          with:
#            command: monitor
#            args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE
#
#        - name: Generate sarif Snyk report
#          uses: snyk/actions/gradle@master
#          continue-on-error: true
#          with:
#            args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE --sarif-file-output=snyk-app.sarif
#
#        # Fix/hack for Snyk's sarif file to avoid this error uploading to GitHub.
#        # See https://github.com/github/codeql-action/issues/2187 for more context.
#        - name: Fix undefined values
#          run: |
#            sed -i 's/"security-severity": "undefined"/"security-severity": "0"/g' snyk-app.sarif
#
#        - name: Upload result to GitHub Code Scanning
#          uses: github/codeql-action/upload-sarif@v3
#          with:
#            sarif_file: snyk-app.sarif
