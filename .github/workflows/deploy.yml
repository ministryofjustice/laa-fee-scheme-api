name: Deploy after PR merged

on:
  push:
    branches:
#      - main
      - deploy-to-ecr
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests
        uses: './.github/actions/build-and-test'

  ecr:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3.5.0
        with:
          build-root-directory: ${{inputs.working-directory}}

      - name: Build and install dependencies
        uses: gradle/gradle-build-action@v3.5.0
        with:
          arguments: |
            clean
            build
            -Dorg.gradle.daemon=true
            -Dorg.gradle.workers.max=2
          build-root-directory: ${{inputs.working-directory}}

      - name: Setup AWS ECR credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: Build & push Docker image + Deploy to Kubernetes
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
      - run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}