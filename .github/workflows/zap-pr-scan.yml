name: ZAP PR Scan
on:
  workflow_call:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build API JAR
        run: ./gradlew clean build

      - name: Build API Docker Image
        run: docker build -t laa-fee-scheme-api:pr-image .

      - name: Create Docker network
        run: docker network create zap-net || true

      - name: Cleanup old containers
        run: |
          docker rm -f laa-fee-scheme-api || true
          docker rm -f fee-scheme-db || true

      - name: Start Postgres DB
        run: |
          docker run -d --name fee-scheme-db --network zap-net \
            -e POSTGRES_USER=test \
            -e POSTGRES_PASSWORD=test \
            -e POSTGRES_DB=fee_scheme \
            -p 5432:5432 \
            postgres:15
          sleep 10

      - name: Start API Container
        run: |
          docker run -d --name laa-fee-scheme-api --network zap-net \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://fee-scheme-db:5432/fee_scheme \
            -e SPRING_DATASOURCE_USERNAME=test \
            -e SPRING_DATASOURCE_PASSWORD=test \
            -e SPRING_PROFILES_ACTIVE=test \
            -e SENTRY_DSN="" \
            -p 8085:8085 -p 8185:8185 \
            laa-fee-scheme-api:pr-image

      - name: Wait for API to be ready
        run: |
          echo "Wait for application"
          # Wait for Spring Boot app health endpoint
          until docker run --rm --network zap-net byrnedo/alpine-curl \
            -s http://laa-fee-scheme-api:8185/actuator/health | grep UP > /dev/null; do
            echo "Waiting for application"
            sleep 5
          done
          echo "Application ready"

      - name: Run ZAP OpenAPI Scan
        run: |
          mkdir -p "$RUNNER_TEMP/zap"
          chmod 777 "$RUNNER_TEMP/zap"
          docker run --rm \
            --network zap-net \
            -v "$RUNNER_TEMP/zap:/zap/wrk:rw" \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-api-scan.py \
              -t http://laa-fee-scheme-api:8085/v3/api-docs \
              -f openapi \
              -r /zap/wrk/report.html \
              -J /zap/wrk/report.json \
              -I \
              -z "-config replacer.full_list(0).description=authheader \
                  -config replacer.full_list(0).enabled=true \
                  -config replacer.full_list(0).matchtype=REQ_HEADER \
                  -config replacer.full_list(0).matchstr=Authorization \
                  -config replacer.full_list(0).replacement='Bearer 1234' \
                  -config api.activeScan.maximumDuration=10 \
                  -config api.activeScan.attackStrength=HIGH"

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-pr-report
          path: |
            $RUNNER_TEMP/zap/report.html
            $RUNNER_TEMP/zap/report.json