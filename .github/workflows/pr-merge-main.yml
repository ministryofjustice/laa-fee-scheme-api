name: Build and deploy after PR merged

on:
  push:
    branches:
#      - main
      - deploy-to-ecr
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and test
        run: ./gradlew build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test coverage verification
        run: ./gradlew jacocoTestCoverageVerification

      - name: Integration test
        run: ./gradlew integrationTest --tests '*IntegrationTest'

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: scheme-service/build/test-results
          retention-days: 14

      - name: Upload checkstyle report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: scheme-service/build/reports/checkstyle
          retention-days: 14

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: scheme-service/build/reports/tests
          retention-days: 14

      - name: Upload jacoco coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: scheme-service/build/reports/jacoco
          retention-days: 14

  ecr:
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and install dependencies
        run: ./gradlew clean build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup AWS ECR credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: Build & push Docker image + Deploy to Kubernetes
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
      - run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}

#  vulnerability-report:
#    runs-on: ubuntu-latest
#
#    permissions:
#      security-events: write
#
#    env:
#      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#      SNYK_ORG: legal-aid-agency
#      SNYK_TEST_EXCLUDE: build,generated
#      SNYK_TARGET_REFERENCE: main
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Run Snyk to check app for vulnerabilities
#        uses: snyk/actions/gradle@master
#        continue-on-error: true # To make sure that SARIF upload gets called
#        with:
#          command: monitor
#          args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE
#
#      - name: Generate sarif Snyk report
#        uses: snyk/actions/gradle@master
#        continue-on-error: true
#        with:
#          args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE --sarif-file-output=snyk-app.sarif
#
#      # Fix/hack for Snyk's sarif file to avoid this error uploading to GitHub.
#      # See https://github.com/github/codeql-action/issues/2187 for more context.
#      - name: Fix undefined values
#        run: |
#          sed -i 's/"security-severity": "undefined"/"security-severity": "0"/g' snyk-app.sarif
#
#      - name: Upload result to GitHub Code Scanning
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: snyk-app.sarif
